{"version":3,"sources":["./src/app/market-area/market-area.module.ts","./src/app/market-area/product-card/product-card.component.ts","./src/app/market-area/product-card/product-card.component.html","./src/app/market-area/market/market.component.ts","./src/app/market-area/market/market.component.html","./src/app/models/cart-models/cart-item.model.ts","./src/app/market-area/products-list/products-list.component.ts","./src/app/market-area/products-list/products-list.component.html"],"names":[],"mappings":"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","file":"market-area-market-area-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SharedAreaModule } from '../shared-area/shared-area.module';\nimport { ProductCardComponent } from './product-card/product-card.component';\nimport { ProductsListComponent } from './products-list/products-list.component';\nimport { MarketComponent } from './market/market.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    { path: \"\", component: MarketComponent }\n]\n\n@NgModule({\n    declarations: [\n        MarketComponent,\n        ProductCardComponent,\n        ProductsListComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedAreaModule,\n        MatSelectModule,\n        ReactiveFormsModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatDividerModule,\n        MatSidenavModule,\n        MatTabsModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class MarketAreaModule { }\n","import { paths } from './../../../environments/paths.environment';\nimport { AuthService } from 'src/app/services/global-services/auth.service';\nimport { NotificationService } from '../../services/global-services/notification.service';\nimport { CartItemModel } from '../../models/cart-models/cart-item.model';\nimport { CartItemsService } from '../../services/market-services/cart-items.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ProductModel } from 'src/app/models/product-models/product.model';\nimport { environment } from 'src/environments/environment';\nimport store from 'src/app/redux/store';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-product-card',\n    templateUrl: './product-card.component.html',\n    styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent implements OnInit {\n    @Input()\n    public product: ProductModel;\n\n    public quantity: number = 1;\n    public imageUrl: string;\n    public cartItem = new CartItemModel();\n\n    public constructor(\n        private cartItemsService: CartItemsService,\n        private notificationService: NotificationService,\n        private authService: AuthService,\n        private router: Router) { }\n\n    public async ngOnInit(): Promise<void> {\n        //getting from server product image;\n        this.imageUrl = environment.productsUrl + \"productImages/\" + this.product.imageName;\n    }\n\n    public plus(): void {\n        //plus quantity by 1, will be use in the future to add/update in shopping cart;\n        this.quantity++;\n    }\n\n    public minus(): void {\n        //minus quantity by 1, will be use in the future to add/update in shopping cart;\n        this.quantity--;\n    }\n\n    //function that handle add to cart click event;\n    public async addToCart(): Promise<void> {\n        try {\n            const oldCartItem = store.getState().cartItemState.cartItems.find(c => c.productId === this.product._id);\n            //if user have in cart that product updating old cart item\n            if (oldCartItem) {\n                const updatedOldCartItem = this.updateOldCartItem(oldCartItem)\n                this.cartItem = await this.cartItemsService.updateCartItemAsync(updatedOldCartItem);\n                this.notificationService.success(this.cartItem.product.name + \" has been updated\");\n            } else {\n                //if not creating cart item and adding it to shopping cart;\n                const createdCartItem = this.createCartItem();\n                this.cartItem = await this.cartItemsService.addCartItemAsync(createdCartItem);\n                this.notificationService.success(this.cartItem.product.name + \" has been added\");\n            }\n\n        } catch (error) {\n            this.notificationService.error(error);\n            if (error.status === 403) {\n                this.authService.logout();\n                this.router.navigateByUrl(paths.homeUrl);\n            }\n        }\n    }\n\n    //function that handle updating old cart item;\n    private updateOldCartItem(oldCartItem: CartItemModel): CartItemModel {\n        oldCartItem.quantity += this.quantity;\n        oldCartItem.totalPrice = this.product.price * oldCartItem.quantity;\n        return oldCartItem;\n    }\n\n    //function that handle creating cart item;\n    private createCartItem(): CartItemModel {\n        let cartItem = new CartItemModel();\n        cartItem.productId = this.product._id;\n        cartItem.quantity = this.quantity;\n        cartItem.totalPrice = this.product.price * this.quantity;\n        cartItem.shoppingCartId = store.getState().shoppingCartState.shoppingCart._id;\n        cartItem.product = this.product;\n        return cartItem;\n    }\n\n}\n","<mat-card>\n    <img mat-card-image src=\"{{imageUrl}}\" alt=\"{{product.name}}\">\n    <mat-card-content>\n        <mat-card-title>{{product.name}}</mat-card-title>\n        <mat-card-subtitle>{{product.price | currency}}</mat-card-subtitle>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-mini-fab color=\"warn\" [disabled]=\"quantity <= 1\" (click)=\"minus()\">\n            <mat-icon>remove</mat-icon>\n        </button>\n        <mat-form-field>\n            <mat-label>Quantity</mat-label>\n            <input matInput disabled type=\"number\" min=\"1\" [(ngModel)]=\"quantity\">\n        </mat-form-field>\n        <button mat-mini-fab color=\"accent\" (click)=\"plus()\">\n            <mat-icon>add</mat-icon>\n        </button>\n        <br>\n        <button mat-raised-button (click)=\"addToCart()\">Add To Cart</button>\n    </mat-card-actions>\n</mat-card>","import { paths } from './../../../environments/paths.environment';\nimport { ShoppingCartService } from '../../services/market-services/shopping-cart.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ShoppingCartModel } from 'src/app/models/cart-models/shopping-cart.model';\nimport { NotificationService } from 'src/app/services/global-services/notification.service';\nimport { AuthService } from 'src/app/services/global-services/auth.service';\nimport { Router } from '@angular/router';\nimport store from '../../redux/store';\n\n@Component({\n    selector: 'app-market',\n    templateUrl: './market.component.html',\n    styleUrls: ['./market.component.css']\n})\nexport class MarketComponent implements OnInit {\n    public shoppingCart: ShoppingCartModel;\n\n    public constructor(\n        private shoppingCartService: ShoppingCartService,\n        private notificationService: NotificationService,\n        private authService: AuthService,\n        private router: Router) { }\n\n    public async ngOnInit(): Promise<void> {\n        try {\n            //handling if user have shopping cart and if he doesn't have any shopping cart open;\n            this.shoppingCart = await this.shoppingCartService.getShoppingCartAsync();\n            if (!this.shoppingCart || !this.shoppingCart.open) {\n                const newShoppingCart = new ShoppingCartModel();\n                newShoppingCart.userId = store.getState().authState.user._id;\n                this.shoppingCart = await this.shoppingCartService.createShoppingCart(newShoppingCart);\n            }\n        } catch (error) {\n            this.notificationService.error(error);\n            if (error.status === 403) {\n                this.authService.logout();\n                this.router.navigateByUrl(paths.homeUrl);\n            }\n        }\n    }\n\n}\n","<mat-drawer-container>\n    <nav mat-tab-nav-bar>\n        <a mat-tab-link (click)=\"drawer.toggle()\">\n            <mat-icon>keyboard_arrow_left</mat-icon>\n            &nbsp; Cart &nbsp;\n            <mat-icon>shopping_cart</mat-icon>\n            &nbsp;\n            <mat-icon>keyboard_arrow_right</mat-icon>\n        </a>\n    </nav>\n    <mat-drawer opened #drawer mode=\"side\">\n        <app-cart-list *ngIf=\"shoppingCart?.open\" [shoppingCartId]=\"shoppingCart._id\" [enableChanges]=\"true\"></app-cart-list>\n    </mat-drawer>\n    <app-products-list></app-products-list>\n</mat-drawer-container>","import { ProductModel } from \"../product-models/product.model\";\r\n\r\nexport class CartItemModel {\r\n    public _id: string;\r\n    public productId: string;\r\n    public shoppingCartId: string;\r\n    public quantity: number = 1;\r\n    public totalPrice: number;\r\n    public product: ProductModel;\r\n    public background: Object;\r\n}","import { Unsubscribe } from 'redux';\nimport { AuthService } from 'src/app/services/global-services/auth.service';\nimport { ProductsService } from '../../services/market-services/products.service';\nimport { CategoryModel } from '../../models/product-models/category.model';\nimport { CategoriesService } from '../../services/market-services/categories.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ProductModel } from 'src/app/models/product-models/product.model';\nimport store from 'src/app/redux/store';\n\n@Component({\n    selector: 'app-products-list',\n    templateUrl: './products-list.component.html',\n    styleUrls: ['./products-list.component.css']\n})\nexport class ProductsListComponent implements OnInit {\n\n    public categories: CategoryModel[];\n    public products: ProductModel[];\n    public productsSwitched: ProductModel[];\n    public unSubscribeFromStore: Unsubscribe;\n    public constructor(\n        private categoriesService: CategoriesService,\n        private productsService: ProductsService,\n        private authService: AuthService) { }\n\n    public async ngOnInit(): Promise<void> {\n        try {\n            //getting products and categories from services;\n            this.categories = await this.categoriesService.getAllCategoriesAsync();\n            this.products = await this.productsService.getAllProducts();\n            \n            //creating new variable to avoid any reference type problems;\n            this.productsSwitched = [...this.products];\n\n             //subscribe for any further changes in store.\n             this.unSubscribeFromStore = store.subscribe(async () => {\n                this.products = await this.productsService.getAllProducts();\n                this.productsSwitched = [...this.products];\n            })\n            \n        } catch (error) {\n            if (error.status === 403) {\n                this.authService.logout();\n            }\n        }\n    }\n\n    //Handle click on any category section except \"All\".\n    public changeCategory(_id: string): void {\n        this.productsSwitched = [...this.products.filter(p => p.categoryId === _id)];\n    }\n\n    //Handle click on \"All\" category section.\n    public allCategory(): void {\n        this.productsSwitched = [...this.products];\n    }\n\n    //handle search product;\n    public searchProduct(productName: string): void {\n        this.productsSwitched = [...this.products.filter(p => p.name.toLowerCase().includes(productName.toLowerCase()))];\n    }\n\n}\n","<nav mat-tab-nav-bar>\n    <app-search-bar (productToSearch)=\"searchProduct($event)\"></app-search-bar>\n    <span class=\"toolbar-flex\"></span>\n    <a mat-tab-link active (click)=\"allCategory()\">\n        All\n    </a>\n    <a mat-tab-link active *ngFor=\"let c of categories\" (click)=\"changeCategory(c._id)\">\n        {{c.categoryName}}\n    </a>\n</nav>\n<div>\n    <ng-container *ngIf=\"productsSwitched?.length\">\n        <app-product-card *ngFor=\"let p of productsSwitched\" [product]=\"p\"></app-product-card>\n    </ng-container>\n    <ng-container *ngIf=\"!products?.length\">\n        <div class=\"nothing-in-store\">\n            <p>\n                <mat-spinner></mat-spinner>\n            </p>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!productsSwitched?.length\">\n        <div class=\"nothing-in-store\">\n            <p>\n                <span>Nothing with that name in store</span>\n            </p>\n        </div>\n    </ng-container>\n</div>"],"sourceRoot":"webpack:///"}